name: CI Test

on:
  push:
    branches:
      - master

jobs:
  ci-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: hankcp/postgres-test:latest
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: ["5432:5432"]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
    - name: Install PostgreSQL 11 client
      run: |
        sudo apt-get update
        sudo apt-get install --yes --no-install-recommends postgresql-client
    - run: |
        psql -c 'create database "sbp";' -U postgres
        psql -c 'create database "sbp-test";' -U postgres
      env:
        PGHOST: localhost
        PGUSER: postgres
    - run: ./gradlew doMigration
    - run: ./gradlew copyDependencies buildApp check -PspringBootVersion=3.0.11 --rerun-tasks
    - run: ./gradlew copyDependencies buildApp check -PspringBootVersion=3.1.12 --rerun-tasks
    - run: ./gradlew copyDependencies buildApp check -PspringBootVersion=3.2.7 --rerun-tasks
    - run: ./gradlew copyDependencies buildApp check -PspringBootVersion=3.3.12 --rerun-tasks
    - run: ./gradlew copyDependencies buildApp check -PspringBootVersion=3.4.7 --rerun-tasks
    - run: ./gradlew copyDependencies buildApp check -PspringBootVersion=3.5.3 --rerun-tasks
  publish-snapshot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - run: ./gradlew publishAggregationToCentralPortalSnapshots -Pversion=-SNAPSHOT -P'signing.keyId=${{ secrets.signingKeyId }}' -P'signing.password=${{ secrets.signingPassword }}' -P'sonatypeUsername=${{ secrets.sonatypeUsername }}' -P'sonatypePassword=${{ secrets.sonatypePassword }}' --rerun-tasks
